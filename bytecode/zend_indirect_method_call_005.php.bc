
Pseudo-main at 0 (ID 0)
 FPI 2-53; fpOff = 3
 FPI 8-21; fpOff = 7 parentIndex = 0 (depth 2)
  // line 11
    0: DefCls 0
  // line 34
    2: FPushFuncD 1 "var_dump"
    8: FPushCtorD 1 "foo"
   14: Array array(0=>1,1=>array(0=>4,1=>5),2=>3)
   19: FPassCE 0
   21: FCall 1
   23: PopR # i0:t=Null*
   24: FPassM 0 <C EI:1 EI:0>
   53: FCall 1
   55: PopR
   56: Int 1
   65: RetC

Method public (leaf) foo::__construct at 66
  // line 14
   66: CheckThis
   67: CGetL 0
   69: SetM <H PT:"container"> # iM0:c=foo
   84: PopC
  // line 15
   85: Null
   86: RetC

Method public (leaf) foo::offsetSet at 87
  // line 17
   87: IsTypeL 0 Null
   90: JmpZ 30 (120)
  // line 18
   95: CheckThis
   96: CGetL 1
   98: SetM <H PT:"container" W> # iM0:c=foo
  114: PopC
  // line 21
  115: Jmp 26 (141)
  // line 20
  120: CheckThis
  121: CGetL 1
  123: SetM <H PT:"container" EL:0> # iM0:c=foo
  140: PopC
  // line 22
  141: Null
  142: RetC

Method public (leaf) foo::offsetExists at 143
  // line 24
  143: CheckThis
  144: IssetM <H PT:"container" EL:0> # iM0:c=foo
  161: RetC

Method public (leaf) foo::offsetUnset at 162
  // line 27
  162: CheckThis
  163: UnsetM <H PT:"container" EL:0> # iM0:c=foo
  // line 28
  180: Null
  181: RetC

Method public (leaf) foo::offsetGet at 182
  // line 30
  182: CheckThis
  183: IssetM <H PT:"container" EL:0> # iM0:c=foo
  200: JmpZ 28 (228)
  205: CheckThis
  206: CGetM <H PT:"container" EL:0> # iM0:c=foo
  223: Jmp 6 (229)
  228: Null
  229: RetC
Class foo at 0 (ID 0)
 Method public (leaf) foo::__construct at 66
 Method public (leaf) foo::offsetSet at 87
 Method public (leaf) foo::offsetExists at 143
 Method public (leaf) foo::offsetUnset at 162
 Method public (leaf) foo::offsetGet at 182
 Property private foo::container = array()
Pseudo-main at 0 (ID 0)
 FPI 2-53; fpOff = 3
 FPI 8-21; fpOff = 7 parentIndex = 0 (depth 2)
