
Pseudo-main at 0 (ID 0)
 FPI 12-18; fpOff = 3
  // line 3
    0: DefCls 0
  // line 9
    2: DefCls 1
  // line 18
    4: DefCls 2
  // line 32
    6: DefCls 3
  // line 43
    8: DefCls 4
  // line 49
   10: DefCls 5
  // line 124
   12: FPushFuncD 0 "main"
   18: FCall 0
   20: PopR
   21: Int 1
   30: RetC

Function invoker at 31 (ID 1)
 FPI 33-35; fpOff = 4
 FPI 40-42; fpOff = 4
  // line 54
   31: CGetL 0
   33: FPushCuf 0
   35: FCall 0
   37: PopR
  // line 55
   38: CGetL 0
   40: FPushFunc 0
   42: FCall 0
   44: PopR
  // line 56
   45: Null
   46: RetC

Function test_destructor at 47 (ID 2)
 FPI 68-92; fpOff = 3
 FPI 74-80; fpOff = 7 parentIndex = 0 (depth 2)
  // line 59
   47: String " = "
   52: Print
   53: PopC
   54: String "test_destructor"
   59: Print
   60: PopC
   61: String " =\n"
   66: Print
   67: PopC
  // line 61
   68: FPushFuncD 1 "invoker"
   74: FPushCtorD 0 "Dtor"
   80: FCall 0
   82: PopR # i0:t=Null*
   83: String "f"
   88: NewPackedArray 2
   90: FPassCE 0
   92: FCall 1
   94: PopR
  // line 62
   95: String "done: test_destructor\n"
  100: Print
  101: PopC
  // line 63
  102: Null
  103: RetC

Function test_inheritance at 104 (ID 3)
 FPI 125-131; fpOff = 5
 FPI 139-157; fpOff = 4
 FPI 147-153; fpOff = 7 parentIndex = 1 (depth 2)
  // line 66
  104: String " = "
  109: Print
  110: PopC
  111: String "test_inheritance"
  116: Print
  117: PopC
  118: String " =\n"
  123: Print
  124: PopC
  // line 68
  125: FPushCtorD 0 "C"
  131: FCall 0
  133: PopR # i0:t=Null*
  134: SetL 0
  136: PopC
  // line 69
  137: CGetL 0
  139: FPushObjMethodD 1 "callInScope"
  145: CGetL 0
  147: FPushObjMethodD 0 "exposeBlah"
  153: FCall 0
  155: FPassR 0
  157: FCall 1
  159: PopR
  // line 70
  160: Null
  161: RetC

Function test_invocation_syntaxes at 162 (ID 4)
 FPI 191-197; fpOff = 19
 FPI 203-209; fpOff = 19
 FPI 215-221; fpOff = 19
 FPI 336-354; fpOff = 18
 FPI 344-350; fpOff = 21 parentIndex = 3 (depth 2)
 FPI 357-375; fpOff = 18
 FPI 365-371; fpOff = 21 parentIndex = 5 (depth 2)
 FPI 378-396; fpOff = 18
 FPI 386-392; fpOff = 21 parentIndex = 7 (depth 2)
 FPI 399-417; fpOff = 18
 FPI 407-413; fpOff = 21 parentIndex = 9 (depth 2)
 FPI 420-438; fpOff = 18
 FPI 428-434; fpOff = 21 parentIndex = 11 (depth 2)
 FPI 441-459; fpOff = 18
 FPI 449-455; fpOff = 21 parentIndex = 13 (depth 2)
 FPI 462-480; fpOff = 18
 FPI 470-476; fpOff = 21 parentIndex = 15 (depth 2)
 FPI 483-501; fpOff = 18
 FPI 491-497; fpOff = 21 parentIndex = 17 (depth 2)
 FPI 504-522; fpOff = 18
 FPI 512-518; fpOff = 21 parentIndex = 19 (depth 2)
 FPI 525-543; fpOff = 18
 FPI 533-539; fpOff = 21 parentIndex = 21 (depth 2)
 FPI 546-564; fpOff = 18
 FPI 554-560; fpOff = 21 parentIndex = 23 (depth 2)
 FPI 574-591; fpOff = 18
 FPI 582-587; fpOff = 21 parentIndex = 25 (depth 2)
 FPI 594-611; fpOff = 18
 FPI 602-607; fpOff = 21 parentIndex = 27 (depth 2)
 FPI 614-631; fpOff = 18
 FPI 622-627; fpOff = 21 parentIndex = 29 (depth 2)
 FPI 634-651; fpOff = 18
 FPI 642-647; fpOff = 21 parentIndex = 31 (depth 2)
 FPI 654-671; fpOff = 18
 FPI 662-667; fpOff = 21 parentIndex = 33 (depth 2)
 FPI 674-691; fpOff = 18
 FPI 682-687; fpOff = 21 parentIndex = 35 (depth 2)
 FPI 694-711; fpOff = 18
 FPI 702-707; fpOff = 21 parentIndex = 37 (depth 2)
 FPI 714-731; fpOff = 18
 FPI 722-727; fpOff = 21 parentIndex = 39 (depth 2)
 FPI 734-751; fpOff = 18
 FPI 742-747; fpOff = 21 parentIndex = 41 (depth 2)
 FPI 754-771; fpOff = 18
 FPI 762-767; fpOff = 21 parentIndex = 43 (depth 2)
 FPI 774-791; fpOff = 18
 FPI 782-787; fpOff = 21 parentIndex = 45 (depth 2)
  // line 73
  162: String " = "
  167: Print
  168: PopC
  169: String "test_invocation_syntaxes"
  174: Print
  175: PopC
  176: String " =\n"
  181: Print
  182: PopC
  // line 75
  183: String "10f"
  188: SetL 0
  190: PopC
  // line 76
  191: FPushCtorD 0 "Functor"
  197: FCall 0
  199: PopR # i0:t=Null*
  200: SetL 1
  202: PopC
  // line 77
  203: FPushCtorD 0 "C"
  209: FCall 0
  211: PopR # i0:t=Null*
  212: SetL 2
  214: PopC
  // line 78
  215: FPushCtorD 0 "CMagic"
  221: FCall 0
  223: PopR # i0:t=Null*
  224: SetL 3
  226: PopC
  // line 79
  227: String "intval"
  232: SetL 4
  234: PopC
  // line 80
  235: Array array(0=>"C",1=>"intval")
  240: SetL 5
  242: PopC
  // line 81
  243: String "C::intval"
  248: SetL 6
  250: PopC
  // line 82
  251: CGetL 2
  253: String "inst_intval"
  258: NewPackedArray 2
  260: SetL 7
  262: PopC
  // line 83
  263: CGetL 2
  265: String "intval"
  270: NewPackedArray 2
  272: SetL 8
  274: PopC
  // line 84
  275: CreateCl 0 "Closure$test_invocation_syntaxes"
  281: SetL 9
  283: PopC
  // line 85
  284: Array array(0=>"CMagic",1=>"intval")
  289: SetL 10
  291: PopC
  // line 86
  292: String "CMagic::intval"
  297: SetL 11
  299: PopC
  // line 87
  300: CGetL 3
  302: String "inst_intval"
  307: NewPackedArray 2
  309: SetL 12
  311: PopC
  // line 88
  312: CreateCl 0 "Closure$test_invocation_syntaxes#2"
  318: SetL 13
  320: PopC
  // line 89
  321: Array array(0=>"C",1=>"noSuchMethod")
  326: SetL 14
  328: PopC
  // line 91
  329: String "* call_user_func ********************\n"
  334: Print
  335: PopC
  // line 92
  336: FPushFuncD 1 "var_dump"
  342: CGetL 4
  344: FPushCuf 1
  346: CGetL 0
  348: FPassC 0
  350: FCall 1
  352: FPassR 0
  354: FCall 1
  356: PopR
  // line 93
  357: FPushFuncD 1 "var_dump"
  363: CGetL 1
  365: FPushCuf 1
  367: CGetL 0
  369: FPassC 0
  371: FCall 1
  373: FPassR 0
  375: FCall 1
  377: PopR
  // line 94
  378: FPushFuncD 1 "var_dump"
  384: CGetL 9
  386: FPushCuf 1
  388: CGetL 0
  390: FPassC 0
  392: FCall 1
  394: FPassR 0
  396: FCall 1
  398: PopR
  // line 95
  399: FPushFuncD 1 "var_dump"
  405: CGetL 6
  407: FPushCuf 1
  409: CGetL 0
  411: FPassC 0
  413: FCall 1
  415: FPassR 0
  417: FCall 1
  419: PopR
  // line 96
  420: FPushFuncD 1 "var_dump"
  426: CGetL 5
  428: FPushCuf 1
  430: CGetL 0
  432: FPassC 0
  434: FCall 1
  436: FPassR 0
  438: FCall 1
  440: PopR
  // line 97
  441: FPushFuncD 1 "var_dump"
  447: CGetL 7
  449: FPushCuf 1
  451: CGetL 0
  453: FPassC 0
  455: FCall 1
  457: FPassR 0
  459: FCall 1
  461: PopR
  // line 98
  462: FPushFuncD 1 "var_dump"
  468: CGetL 8
  470: FPushCuf 1
  472: CGetL 0
  474: FPassC 0
  476: FCall 1
  478: FPassR 0
  480: FCall 1
  482: PopR
  // line 99
  483: FPushFuncD 1 "var_dump"
  489: CGetL 13
  491: FPushCuf 1
  493: CGetL 0
  495: FPassC 0
  497: FCall 1
  499: FPassR 0
  501: FCall 1
  503: PopR
  // line 100
  504: FPushFuncD 1 "var_dump"
  510: CGetL 11
  512: FPushCuf 1
  514: CGetL 0
  516: FPassC 0
  518: FCall 1
  520: FPassR 0
  522: FCall 1
  524: PopR
  // line 101
  525: FPushFuncD 1 "var_dump"
  531: CGetL 10
  533: FPushCuf 1
  535: CGetL 0
  537: FPassC 0
  539: FCall 1
  541: FPassR 0
  543: FCall 1
  545: PopR
  // line 102
  546: FPushFuncD 1 "var_dump"
  552: CGetL 12
  554: FPushCuf 1
  556: CGetL 0
  558: FPassC 0
  560: FCall 1
  562: FPassR 0
  564: FCall 1
  566: PopR
  // line 104
  567: String "* ()-invoke ********************\n"
  572: Print
  573: PopC
  // line 105
  574: FPushFuncD 1 "var_dump"
  580: CGetL 4
  582: FPushFunc 1
  584: FPassL 0 0
  587: FCall 1
  589: FPassR 0
  591: FCall 1
  593: PopR
  // line 106
  594: FPushFuncD 1 "var_dump"
  600: CGetL 1
  602: FPushFunc 1
  604: FPassL 0 0
  607: FCall 1
  609: FPassR 0
  611: FCall 1
  613: PopR
  // line 107
  614: FPushFuncD 1 "var_dump"
  620: CGetL 9
  622: FPushFunc 1
  624: FPassL 0 0
  627: FCall 1
  629: FPassR 0
  631: FCall 1
  633: PopR
  // line 108
  634: FPushFuncD 1 "var_dump"
  640: CGetL 5
  642: FPushFunc 1
  644: FPassL 0 0
  647: FCall 1
  649: FPassR 0
  651: FCall 1
  653: PopR
  // line 109
  654: FPushFuncD 1 "var_dump"
  660: CGetL 7
  662: FPushFunc 1
  664: FPassL 0 0
  667: FCall 1
  669: FPassR 0
  671: FCall 1
  673: PopR
  // line 110
  674: FPushFuncD 1 "var_dump"
  680: CGetL 8
  682: FPushFunc 1
  684: FPassL 0 0
  687: FCall 1
  689: FPassR 0
  691: FCall 1
  693: PopR
  // line 111
  694: FPushFuncD 1 "var_dump"
  700: CGetL 13
  702: FPushFunc 1
  704: FPassL 0 0
  707: FCall 1
  709: FPassR 0
  711: FCall 1
  713: PopR
  // line 112
  714: FPushFuncD 1 "var_dump"
  720: CGetL 10
  722: FPushFunc 1
  724: FPassL 0 0
  727: FCall 1
  729: FPassR 0
  731: FCall 1
  733: PopR
  // line 113
  734: FPushFuncD 1 "var_dump"
  740: CGetL 12
  742: FPushFunc 1
  744: FPassL 0 0
  747: FCall 1
  749: FPassR 0
  751: FCall 1
  753: PopR
  // line 115
  754: FPushFuncD 1 "var_dump"
  760: CGetL 14
  762: FPushFunc 1
  764: FPassL 0 0
  767: FCall 1
  769: FPassR 0
  771: FCall 1
  773: PopR
  // line 116
  774: FPushFuncD 1 "var_dump"
  780: CGetL 6
  782: FPushFunc 1
  784: FPassL 0 0
  787: FCall 1
  789: FPassR 0
  791: FCall 1
  793: PopR
  // line 117
  794: Null
  795: RetC

Function main at 796 (ID 5)
 FPI 796-802; fpOff = 3
 FPI 805-811; fpOff = 3
 FPI 814-820; fpOff = 3
  // line 120
  796: FPushFuncD 0 "test_destructor"
  802: FCall 0
  804: PopR
  // line 121
  805: FPushFuncD 0 "test_inheritance"
  811: FCall 0
  813: PopR
  // line 122
  814: FPushFuncD 0 "test_invocation_syntaxes"
  820: FCall 0
  822: PopR
  // line 123
  823: Null
  824: RetC

Method public (leaf) Functor::__invoke at 825
  // line 5
  825: CGetL 0
  827: CastInt
  828: RetC

Method private (leaf) Base::blah at 829
  // line 10
  829: String "Base::blah"
  834: Print
  835: PopC
  836: String "\n"
  841: Print
  842: PopC
  843: Null
  844: RetC

Method public Base::callInScope at 845
 FPI 847-849; fpOff = 4
 FPI 854-863; fpOff = 4
 FPI 867-869; fpOff = 4
  // line 12
  845: CGetL 0
  847: FPushCuf 0
  849: FCall 0
  851: PopR
  // line 13
  852: CGetL 0
  854: FPushCuf 1
  856: Array array()
  861: FPassC 0
  863: FCallArray
  864: PopR
  // line 14
  865: CGetL 0
  867: FPushFunc 0
  869: FCall 0
  871: PopR
  // line 15
  872: Null
  873: RetC

Method private (leaf) C::blah at 874
  // line 19
  874: String "C"
  879: Print
  880: PopC
  881: String "\n"
  886: Print
  887: PopC
  888: Null
  889: RetC

Method public (leaf) C::exposeBlah at 890
  // line 21
  890: BareThis Notice
  892: String "blah"
  897: NewPackedArray 2
  899: RetC

Method static public (leaf) C::intval at 900
  // line 25
  900: CGetL 0
  902: CastInt
  903: RetC

Method public C::inst_intval at 904
 FPI 915-920; fpOff = 4
  // line 28
  904: String "intval"
  909: String "C"
  914: AGetC
  915: FPushClsMethodF 1
  917: FPassL 0 0
  920: FCall 1
  922: UnboxR
  923: RetC

Method public CMagic::__call at 924
 FPI 942-951; fpOff = 5
  // line 34
  924: CGetL 0
  926: Print
  927: PopC
  928: String " called on instance"
  933: Print
  934: PopC
  935: String "\n"
  940: Print
  941: PopC
  // line 35
  942: FPushFuncD 1 "reset"
  948: FPassL 0 1
  951: FCall 1
  953: UnboxR
  954: CastInt
  955: RetC

Method static public CMagic::__callStatic at 956
 FPI 974-983; fpOff = 5
  // line 38
  956: CGetL 0
  958: Print
  959: PopC
  960: String " called statically"
  965: Print
  966: PopC
  967: String "\n"
  972: Print
  973: PopC
  // line 39
  974: FPushFuncD 1 "reset"
  980: FPassL 0 1
  983: FCall 1
  985: UnboxR
  986: CastInt
  987: RetC

Method public (leaf) Dtor::__destruct at 988
  // line 44
  988: String "Dtor::__destruct"
  993: Print
  994: PopC
  995: String "\n"
 1000: Print
 1001: PopC
 1002: Null
 1003: RetC

Method public (leaf) Dtor::f at 1004
  // line 45
 1004: String "Dtor::f"
 1009: Print
 1010: PopC
 1011: String "\n"
 1016: Print
 1017: PopC
 1018: Null
 1019: RetC

Method public (leaf) Foo::get at 1020
  // line 50
 1020: BareThis Notice
 1022: String "blah"
 1027: NewPackedArray 2
 1029: RetC

Method public Closure$test_invocation_syntaxes::__invoke at 1030
 FPI 1030-1043; fpOff = 5
  // line 84
 1030: FPushClsMethodD 1 "intval" "C"
 1040: FPassL 0 0
 1043: FCall 1
 1045: UnboxR
 1046: RetC

Method public Closure$test_invocation_syntaxes#2::__invoke at 1047
 FPI 1047-1060; fpOff = 5
  // line 88
 1047: FPushClsMethodD 1 "intval" "CMagic"
 1057: FPassL 0 0
 1060: FCall 1
 1062: UnboxR
 1063: RetC

Method public (leaf) Functor::86ctor at 1064
  // line 7
 1064: Null
 1065: RetC

Method public (leaf) Base::86ctor at 1066
  // line 16
 1066: Null
 1067: RetC

Method public (leaf) C::86ctor at 1068
  // line 30
 1068: Null
 1069: RetC

Method public (leaf) CMagic::86ctor at 1070
  // line 41
 1070: Null
 1071: RetC

Method public (leaf) Dtor::86ctor at 1072
  // line 46
 1072: Null
 1073: RetC

Method public (leaf) Foo::86ctor at 1074
  // line 51
 1074: Null
 1075: RetC
Class Functor at 0 (maybe-hoistable) (ID 0)
 Method public (leaf) Functor::__invoke at 825
 Method public (leaf) Functor::86ctor at 1064
Class Base at 2 (maybe-hoistable) (ID 1)
 Method private (leaf) Base::blah at 829
 Method public Base::callInScope at 845
 FPI 847-849; fpOff = 4
 FPI 854-863; fpOff = 4
 FPI 867-869; fpOff = 4
 Method public (leaf) Base::86ctor at 1066
Class C at 4 (maybe-hoistable) (ID 2)
 Method private (leaf) C::blah at 874
 Method public (leaf) C::exposeBlah at 890
 Method static public (leaf) C::intval at 900
 Method public C::inst_intval at 904
 FPI 915-920; fpOff = 4
 Method public (leaf) C::86ctor at 1068
Class CMagic at 6 (maybe-hoistable) (ID 3)
 Method public CMagic::__call at 924
 FPI 942-951; fpOff = 5
 Method static public CMagic::__callStatic at 956
 FPI 974-983; fpOff = 5
 Method public (leaf) CMagic::86ctor at 1070
Class Dtor at 8 (maybe-hoistable) (ID 4)
 Method public (leaf) Dtor::__destruct at 988
 Method public (leaf) Dtor::f at 1004
 Method public (leaf) Dtor::86ctor at 1072
Class Foo at 10 (maybe-hoistable) (ID 5)
 Method public (leaf) Foo::get at 1020
 Method public (leaf) Foo::86ctor at 1074
Class Closure$test_invocation_syntaxes at 281 (unique) (ID 6)
 Method public Closure$test_invocation_syntaxes::__invoke at 1030
 FPI 1030-1043; fpOff = 5
Class Closure$test_invocation_syntaxes#2 at 318 (unique) (ID 7)
 Method public Closure$test_invocation_syntaxes#2::__invoke at 1047
 FPI 1047-1060; fpOff = 5
Pseudo-main at 0 (ID 0)
 FPI 12-18; fpOff = 3
Function invoker at 31 (ID 1)
 FPI 33-35; fpOff = 4
 FPI 40-42; fpOff = 4
Function test_destructor at 47 (ID 2)
 FPI 68-92; fpOff = 3
 FPI 74-80; fpOff = 7 parentIndex = 0 (depth 2)
Function test_inheritance at 104 (ID 3)
 FPI 125-131; fpOff = 5
 FPI 139-157; fpOff = 4
 FPI 147-153; fpOff = 7 parentIndex = 1 (depth 2)
Function test_invocation_syntaxes at 162 (ID 4)
 FPI 191-197; fpOff = 19
 FPI 203-209; fpOff = 19
 FPI 215-221; fpOff = 19
 FPI 336-354; fpOff = 18
 FPI 344-350; fpOff = 21 parentIndex = 3 (depth 2)
 FPI 357-375; fpOff = 18
 FPI 365-371; fpOff = 21 parentIndex = 5 (depth 2)
 FPI 378-396; fpOff = 18
 FPI 386-392; fpOff = 21 parentIndex = 7 (depth 2)
 FPI 399-417; fpOff = 18
 FPI 407-413; fpOff = 21 parentIndex = 9 (depth 2)
 FPI 420-438; fpOff = 18
 FPI 428-434; fpOff = 21 parentIndex = 11 (depth 2)
 FPI 441-459; fpOff = 18
 FPI 449-455; fpOff = 21 parentIndex = 13 (depth 2)
 FPI 462-480; fpOff = 18
 FPI 470-476; fpOff = 21 parentIndex = 15 (depth 2)
 FPI 483-501; fpOff = 18
 FPI 491-497; fpOff = 21 parentIndex = 17 (depth 2)
 FPI 504-522; fpOff = 18
 FPI 512-518; fpOff = 21 parentIndex = 19 (depth 2)
 FPI 525-543; fpOff = 18
 FPI 533-539; fpOff = 21 parentIndex = 21 (depth 2)
 FPI 546-564; fpOff = 18
 FPI 554-560; fpOff = 21 parentIndex = 23 (depth 2)
 FPI 574-591; fpOff = 18
 FPI 582-587; fpOff = 21 parentIndex = 25 (depth 2)
 FPI 594-611; fpOff = 18
 FPI 602-607; fpOff = 21 parentIndex = 27 (depth 2)
 FPI 614-631; fpOff = 18
 FPI 622-627; fpOff = 21 parentIndex = 29 (depth 2)
 FPI 634-651; fpOff = 18
 FPI 642-647; fpOff = 21 parentIndex = 31 (depth 2)
 FPI 654-671; fpOff = 18
 FPI 662-667; fpOff = 21 parentIndex = 33 (depth 2)
 FPI 674-691; fpOff = 18
 FPI 682-687; fpOff = 21 parentIndex = 35 (depth 2)
 FPI 694-711; fpOff = 18
 FPI 702-707; fpOff = 21 parentIndex = 37 (depth 2)
 FPI 714-731; fpOff = 18
 FPI 722-727; fpOff = 21 parentIndex = 39 (depth 2)
 FPI 734-751; fpOff = 18
 FPI 742-747; fpOff = 21 parentIndex = 41 (depth 2)
 FPI 754-771; fpOff = 18
 FPI 762-767; fpOff = 21 parentIndex = 43 (depth 2)
 FPI 774-791; fpOff = 18
 FPI 782-787; fpOff = 21 parentIndex = 45 (depth 2)
Function main at 796 (ID 5)
 FPI 796-802; fpOff = 3
 FPI 805-811; fpOff = 3
 FPI 814-820; fpOff = 3
